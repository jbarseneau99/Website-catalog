name: Deploy Tree Navigation

on:
  push:
    branches: [ main ]
    paths:
      - 'adminHierarchy.json'
      - 'tree-nav.css'
      - 'tree-navigation.js'
      - 'tree-nav/**'
      - 'fix-admin-ui-path.sh'
      - 'enhance-tree-nav.sh'
      - 'fix-path-issue.sh'
      - '.github/workflows/tree-nav-deploy.yml'
  workflow_dispatch:  # Allow manual triggering

# Add explicit permissions
permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Verify GCP credentials
      run: |
        if [ -z "${{ secrets.GCP_SA_KEY }}" ]; then
          echo "::error::GCP_SA_KEY secret is not set. Please add it in GitHub repository secrets."
          exit 1
        fi
        if [ -z "${{ secrets.GCP_PROJECT_ID }}" ]; then
          echo "::error::GCP_PROJECT_ID secret is not set. Please add it in GitHub repository secrets."
          exit 1
        fi
    
    # First authenticate to Google Cloud
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        
    # Then set up the gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
    
    # Get GKE credentials for kubectl
    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: mach33-cluster
        location: us-central1-a
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        
    - name: Install jq
      run: sudo apt-get install -y jq
      
    - name: Deploy enhanced tree navigation
      run: |
        # Make scripts executable
        chmod +x ./enhance-tree-nav.sh
        chmod +x ./fix-path-issue.sh
        
        # Run the enhanced tree navigation script
        ./enhance-tree-nav.sh
        
        # Fix HTML path issues
        ./fix-path-issue.sh
        
        echo "Tree navigation deployment and path fix completed"
        
    - name: Verify deployment
      run: |
        echo "Verifying deployment..."
        
        # Check if kubectl is working properly
        echo "Verifying kubectl connection to cluster:"
        kubectl cluster-info
        
        # Check if the ConfigMap exists
        if kubectl get configmap admin-ui-tree-nav -n mach33 &> /dev/null; then
          echo "✅ ConfigMap admin-ui-tree-nav exists"
        else
          echo "❌ ConfigMap admin-ui-tree-nav does not exist"
          exit 1
        fi
        
        # Check if the fixed HTML ConfigMap exists
        if kubectl get configmap admin-service-html-fixed -n mach33 &> /dev/null; then
          echo "✅ ConfigMap admin-service-html-fixed exists"
        else
          echo "❌ ConfigMap admin-service-html-fixed does not exist"
          exit 1
        fi
        
        # Check if admin-service pod is running
        ADMIN_POD=$(kubectl get pods -n mach33 -l app=admin-service -o jsonpath='{.items[0].metadata.name}' 2>/dev/null)
        if [ -n "$ADMIN_POD" ]; then
          POD_STATUS=$(kubectl get pod $ADMIN_POD -n mach33 -o jsonpath='{.status.phase}')
          if [ "$POD_STATUS" == "Running" ]; then
            echo "✅ admin-service pod is running"
          else
            echo "❌ admin-service pod status: $POD_STATUS"
            kubectl describe pod $ADMIN_POD -n mach33
            exit 1
          fi
        else
          echo "❌ admin-service pod not found"
          kubectl get pods -n mach33
          exit 1
        fi
        
        # Test URL endpoints
        echo "Testing navigation file endpoints..."
        
        # Function to test URL
        test_url() {
          local url="$1"
          local status=$(curl -s -o /dev/null -w "%{http_code}" "$url")
          if [[ "$status" == "200" ]]; then
            echo "✅ $url is accessible (status: $status)"
            return 0
          else
            echo "❌ $url returned status: $status"
            return 1
          fi
        }
        
        # Test critical endpoints
        test_url "http://35.226.118.214/admin/" || exit 1
        test_url "http://35.226.118.214/admin/tree-nav/tree-nav.css" || exit 1
        test_url "http://35.226.118.214/admin/tree-nav/tree-navigation.js" || exit 1
        test_url "http://35.226.118.214/admin/tree-nav/tree-nav.html" || exit 1
        
        echo "Verification completed successfully"
        echo "The enhanced tree navigation has been deployed to production with correct paths"

    - name: Post-deployment notification
      if: success()
      run: |
        echo "Tree navigation successfully deployed to production via GitHub Actions"
        echo "Timestamp: $(date)"
        # Add Slack or email notification here if needed 