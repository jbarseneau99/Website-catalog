server:
  port: 8090  # Fixed port for Port Manager
  port-range:
    min: ${PORT_RANGE_MIN:8081}
    max: ${PORT_RANGE_MAX:8999}

spring:
  application:
    name: PORT-MANAGER
  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI:mongodb+srv://jbarseneau:Cheech99@cluster0.rd3fpku.mongodb.net/website-catalog}
  security:
    basic:
      enabled: false

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URL:http://localhost:8761}/eureka/
    registerWithEureka: true
    fetchRegistry: true
    # Add retry mechanism
    initial-instance-info-replication-interval-seconds: 5
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
  instance:
    preferIpAddress: true
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30
    # Force the port to be 8090
    nonSecurePort: 8090

management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
      cors:
        allowed-origins: "http://localhost:3000"
        allowed-methods: "*"
        allowed-headers: "*"
        allow-credentials: true
        exposed-headers:
          - "Access-Control-Allow-Origin"
          - "Access-Control-Allow-Credentials"
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    mongodb:
      enabled: true
  server:
    port: 8090  # Use same port for management endpoints

logging:
  level:
    com.spacedataarchive.portmanager: DEBUG
    org.springframework.data.mongodb: DEBUG
    org.springframework.web.cors: DEBUG  # Add CORS debug logging 