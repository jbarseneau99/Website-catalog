apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-service
  namespace: mach33
  labels:
    app: admin-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-service
  template:
    metadata:
      labels:
        app: admin-service
    spec:
      containers:
      - name: admin-service
        image: mach33/admin-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 8090
          name: api
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 512Mi
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: mach33-config
              key: MONGODB_URI
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 10
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
        - name: html-content
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
      - name: logs-volume
        emptyDir: {}
      - name: html-content
        configMap:
          name: admin-service-content
      - name: nginx-config
        configMap:
          name: admin-service-nginx-conf
      imagePullSecrets:
      - name: artifact-registry-key
---
apiVersion: v1
kind: Service
metadata:
  name: admin-service
  namespace: mach33
spec:
  selector:
    app: admin-service
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: api
    port: 8090
    targetPort: 8090
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-service-nginx-conf
  namespace: mach33
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;

        access_log /var/log/nginx/host.access.log;
        error_log /var/log/nginx/host.error.log;

        root /usr/share/nginx/html;
        index index.html;

        location ~* \.(html|css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1d;
            add_header Cache-Control "public";
        }

        location /api/ {
            proxy_pass http://localhost:8090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /actuator/ {
            proxy_pass http://localhost:8090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }

        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: admin-service-policy
  namespace: mach33
spec:
  podSelector:
    matchLabels:
      app: admin-service
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
  policyTypes:
  - Ingress 